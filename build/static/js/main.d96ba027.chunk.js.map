{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","cardsObject","status","number","value","discription","className","styles","container","Grid","spacing","justify","map","card","i","key","item","component","Card","xs","md","cx","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","console","log","axios","get","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d96ba027.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nimport styles from './Cards.module.css'\r\n\r\nexport default function Cards({data : {confirmed, recovered, deaths, lastUpdate}}) {\r\n    \r\n\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n\r\n    let cardsObject = [\r\n        {\r\n            status: \"Infected\",\r\n            number: confirmed.value,\r\n            discription: \"Number of active cases\"\r\n        },\r\n        {\r\n            status: \"Recovered\",\r\n            number: recovered.value,\r\n            discription: \"Number of recovered cases\"\r\n        },\r\n        {\r\n            status: \"Deathes\",\r\n            number: deaths.value,\r\n            discription: \"Number of deaths\"\r\n        }\r\n    ]\r\n                    \r\n    \r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n            {cardsObject.map( (card, i) => ( \r\n                <Grid key = {i}  item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered) }>\r\n                    <CardContent >\r\n                        <Typography color=\"textSecondary\" gutterBottom >   {card.status}  </Typography>\r\n                        <Typography variant=\"h5\"> <CountUp start={0} end= {card.number} duration={2} separator=\",\"/>  </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">    {card.discription}   </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            )\r\n            )}\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n        console.log(changeableUrl);\r\n        \r\n    }\r\n\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl)\r\n\r\n        \r\n       \r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n\r\n    } catch(error){\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n\r\n        }))\r\n\r\n        return modifiedData\r\n    } catch(error){\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: { countries }} = await axios.get(`${url}/countries`)\r\n        \r\n        return countries.map((country) => country.name)\r\n\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api'\r\n\r\nimport { Line, Bar} from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\n\r\n\r\nexport default function Chart({data: {confirmed, recovered, deaths}, country}) {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n       \r\n        \r\n\r\n        fetchAPI()\r\n    }, [])\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n        <Line\r\n        data={{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: \"#3333ff\",\r\n                fill: true\r\n\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: \"red\",\r\n                fill: true,\r\n                backgroundColor: 'rgba(255, 0, 0 , 0.5)'\r\n\r\n            }],\r\n        }}\r\n        \r\n        />) : null\r\n\r\n\r\n    )\r\n\r\n    \r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)'\r\n                    ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n\r\n            }}\r\n            options={{\r\n                legend:{display: false},\r\n                title: {display: true, text: `Current state in ${country}`}\r\n            }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect}from 'react'\r\n\r\nimport { NativeSelect, FormControl} from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nimport {fetchCountries} from '../../api'\r\n\r\n\r\n\r\nexport default function CountryPicker({handleCountryChange}) {\r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n        fetchAPI()\r\n    }, [setFetchedCountries])\r\n\r\n\r\n    \r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue = \"\" onChange = {(e) => handleCountryChange(e.target.value) }>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key = {i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Cards, Chart, CountryPicker}  from './components'\r\nimport {fetchData} from './api'\r\n\r\nimport styles from './App.module.css'\r\n\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n\r\n    }\r\n\r\n   async componentDidMount() {\r\n        const fetchedData = await fetchData()\r\n\r\n        this.setState({data: fetchedData})\r\n        \r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country)\r\n\r\n        this.setState({data: fetchedData, country: country})\r\n        console.log(fetchedData);\r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const {data, country} = this.state\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>   \r\n                <CountryPicker handleCountryChange = {this.handleCountryChange}/> \r\n                <Chart data={data} country={country}/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from  'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__E8efa\",\"card\":\"Cards_card__3-3ko\",\"infected\":\"Cards_infected__2vdA-\",\"recovered\":\"Cards_recovered__1-vJ6\",\"deaths\":\"Cards_deaths__BAxc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3N3-P\",\"image\":\"App_image__1ky-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2YcvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1nKdk\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}