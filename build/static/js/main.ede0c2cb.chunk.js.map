{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","console","log","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ede0c2cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__E8efa\",\"card\":\"Cards_card__3-3ko\",\"infected\":\"Cards_infected__2vdA-\",\"recovered\":\"Cards_recovered__1-vJ6\",\"deaths\":\"Cards_deaths__BAxc4\"};","import React from 'react'\r\n\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nimport styles from './Cards.module.css'\r\n\r\nexport default function Cards({data : {confirmed, recovered, deaths, lastUpdate}}) {\r\n    \r\n\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>   Infected   </Typography>\r\n                        <Typography variant=\"h5\"> <CountUp start={0} end={confirmed.value} duration={2} separator=\",\"/>  </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()}  </Typography>\r\n                        <Typography variant=\"body2\">    Number of active cases   </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>   Recovered   </Typography>\r\n                        <Typography variant=\"h5\"> <CountUp start={0} end={recovered.value} duration={2} separator=\",\"/>  </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">    Number of recovered cases   </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>   Deathes   </Typography>\r\n                        <Typography variant=\"h5\"> <CountUp start={0} end={deaths.value} duration={2} separator=\",\"/>  </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">    Number of deathes   </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n        console.log(changeableUrl);\r\n        \r\n    }\r\n\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl)\r\n\r\n        \r\n       \r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n\r\n    } catch(error){\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n\r\n        }))\r\n\r\n        return modifiedData\r\n    } catch(error){\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: { countries }} = await axios.get(`${url}/countries`)\r\n        \r\n        return countries.map((country) => country.name)\r\n\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api'\r\n\r\nimport { Line, Bar} from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\n\r\n\r\nexport default function Chart({data: {confirmed, recovered, deaths}, country}) {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n       \r\n        \r\n\r\n        fetchAPI()\r\n    }, [])\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n        <Line\r\n        data={{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: \"#3333ff\",\r\n                fill: true\r\n\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: \"red\",\r\n                fill: true,\r\n                backgroundColor: 'rgba(255, 0, 0 , 0.5)'\r\n\r\n            }],\r\n        }}\r\n        \r\n        />) : null\r\n\r\n\r\n    )\r\n\r\n    console.log(confirmed, recovered, deaths);\r\n    \r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)'\r\n                    ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n\r\n            }}\r\n            options={{\r\n                legend:{display: false},\r\n                title: {display: true, text: `Current state in ${country}`}\r\n            }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect}from 'react'\r\n\r\nimport { NativeSelect, FormControl} from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nimport {fetchCountries} from '../../api'\r\n\r\n\r\n\r\nexport default function CountryPicker({handleCountryChange}) {\r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n        fetchAPI()\r\n    }, [setFetchedCountries])\r\n\r\n\r\n    \r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue = \"\" onChange = {(e) => handleCountryChange(e.target.value) }>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key = {i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Cards, Chart, CountryPicker}  from './components'\r\nimport {fetchData} from './api'\r\n\r\nimport styles from './App.module.css'\r\n\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n\r\n    }\r\n\r\n   async componentDidMount() {\r\n        const fetchedData = await fetchData()\r\n\r\n        this.setState({data: fetchedData})\r\n        \r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country)\r\n\r\n        this.setState({data: fetchedData, country: country})\r\n        console.log(fetchedData);\r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const {data, country} = this.state\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>   \r\n                <CountryPicker handleCountryChange = {this.handleCountryChange}/> \r\n                <Chart data={data} country={country}/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from  'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3N3-P\",\"image\":\"App_image__1ky-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2YcvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1nKdk\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}